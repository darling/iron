generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Character {
  id       Int     @id @default(autoincrement())
  nickname String?

  name String
  icon String
  bio  String
  stars Int @default(0)

  hp       Int
  start_hp Int
  battles  Int @default(0)
  wins     Int @default(0)

  emoji String @default("<:FerrisNo:769345886702141470>")

  createdDate DateTime @default(now())

  ownerId String
  owner User? @relation(name: "owned", fields: [ownerId], references: [id])

  primaryId String?
  primary User? @relation(name: "primary", fields: [primaryId], references: [id])
}

model Guild {
  id String @id
  name String
  icon String?

  vanity String @unique @default(uuid())

  currency Int @default(0)

  kitchen     Boolean @default(false)
  publicView  Boolean @default(false)
  publicJoin  Boolean @default(false)

  ownerId String
  owner   User   @relation(name: "owner", fields: [ownerId], references: [id])

  staff User[] @relation(name: "staff")
  cooks User[] @relation(name: "kitchen")
}

model User {
  id      String  @id
  premium Boolean @default(false)
  vanity  String? @unique

  currency Int @default(0)
  battles  Int @default(0)
  wins     Int @default(0)

  keys Int @default(0)
  stripeCustomerId String? @unique

  inventory Json @default("{}")

  character   Character? @relation(name: "primary")
  characters Character[] @relation(name: "owned")

  ownedGuilds Guild[] @relation(name: "owner")
  staffGuilds Guild[] @relation(name: "staff")

  kitchenId String?
  kitchen   Guild?  @relation(name: "kitchen", fields: [kitchenId], references: [id])
}